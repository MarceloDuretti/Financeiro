// Local authentication system
import { Switch, Route } from "wouter";
import { queryClient } from "./lib/queryClient";
import { QueryClientProvider } from "@tanstack/react-query";
import { Toaster } from "@/components/ui/toaster";
import { TooltipProvider } from "@/components/ui/tooltip";
import { useAuth } from "@/hooks/useAuth";
import { WebSocketProvider } from "@/contexts/WebSocketContext";
import Home from "@/pages/Home";
import Login from "@/pages/Login";
import Signup from "@/pages/Signup";
import ForgotPassword from "@/pages/ForgotPassword";
import AcceptInvite from "@/pages/AcceptInvite";
import NotFound from "@/pages/not-found";
import DashboardLayout from "@/layouts/DashboardLayout";

// Dashboard Pages
import Dashboard from "@/pages/Dashboard";
import MinhaEmpresa from "@/pages/MinhaEmpresa";
import Lancamentos from "@/pages/Lancamentos";
import Metas from "@/pages/Metas";
import ClientesFornecedores from "@/pages/ClientesFornecedores";
import ContasBancarias from "@/pages/ContasBancarias";
import CentroDeCusto from "@/pages/CentroDeCusto";
import PlanoDeContas from "@/pages/PlanoDeContas";
import Caixas from "@/pages/Caixas";
import FormasPagamento from "@/pages/FormasPagamento";
import Parametros from "@/pages/Parametros";
import Exportacao from "@/pages/Exportacao";
import Importacoes from "@/pages/Importacoes";
import Analise from "@/pages/Analise";
import Relatorios from "@/pages/Relatorios";
import Recibos from "@/pages/Recibos";
import Usuarios from "@/pages/Usuarios";
import Ajuda from "@/pages/Ajuda";
import Notificacoes from "@/pages/Notificacoes";

function Router() {
  const { isAuthenticated, isLoading } = useAuth();

  return (
    <Switch>
      {/* Public Auth Routes - Always accessible */}
      <Route path="/login" component={Login} />
      <Route path="/signup" component={Signup} />
      <Route path="/forgot-password" component={ForgotPassword} />
      <Route path="/accept-invite/:token" component={AcceptInvite} />

      {/* Show landing page if not authenticated or still loading */}
      {isLoading || !isAuthenticated ? (
        <>
          <Route path="/" component={Home} />
          <Route path="/dashboard" component={Home} />
          <Route path="/dashboard/:rest*" component={Home} />
          <Route component={NotFound} />
        </>
      ) : (
        <>
          {/* Redirect root to dashboard if authenticated */}
          <Route path="/">
            {() => {
              window.location.href = "/dashboard";
              return null;
            }}
          </Route>

          {/* Protected Dashboard Routes */}
          <Route path="/dashboard">
            <DashboardLayout>
              <Dashboard />
            </DashboardLayout>
          </Route>

          <Route path="/dashboard/minha-empresa">
            <DashboardLayout>
              <MinhaEmpresa />
            </DashboardLayout>
          </Route>

          <Route path="/dashboard/lancamentos">
            <DashboardLayout>
              <Lancamentos />
            </DashboardLayout>
          </Route>

          <Route path="/dashboard/metas">
            <DashboardLayout>
              <Metas />
            </DashboardLayout>
          </Route>

          <Route path="/dashboard/clientes-fornecedores">
            <DashboardLayout>
              <ClientesFornecedores />
            </DashboardLayout>
          </Route>

          <Route path="/dashboard/contas-bancarias">
            <DashboardLayout>
              <ContasBancarias />
            </DashboardLayout>
          </Route>

          <Route path="/dashboard/centro-de-custo">
            <DashboardLayout>
              <CentroDeCusto />
            </DashboardLayout>
          </Route>

          <Route path="/dashboard/plano-de-contas">
            <DashboardLayout>
              <PlanoDeContas />
            </DashboardLayout>
          </Route>

          <Route path="/dashboard/caixas">
            <DashboardLayout>
              <Caixas />
            </DashboardLayout>
          </Route>

          <Route path="/dashboard/formas-pagamento">
            <DashboardLayout>
              <FormasPagamento />
            </DashboardLayout>
          </Route>

          <Route path="/dashboard/parametros">
            <DashboardLayout>
              <Parametros />
            </DashboardLayout>
          </Route>

          <Route path="/dashboard/exportacao">
            <DashboardLayout>
              <Exportacao />
            </DashboardLayout>
          </Route>

          <Route path="/dashboard/importacoes">
            <DashboardLayout>
              <Importacoes />
            </DashboardLayout>
          </Route>

          <Route path="/dashboard/analise">
            <DashboardLayout>
              <Analise />
            </DashboardLayout>
          </Route>

          <Route path="/dashboard/relatorios">
            <DashboardLayout>
              <Relatorios />
            </DashboardLayout>
          </Route>

          <Route path="/dashboard/recibos">
            <DashboardLayout>
              <Recibos />
            </DashboardLayout>
          </Route>

          <Route path="/dashboard/usuarios">
            <DashboardLayout>
              <Usuarios />
            </DashboardLayout>
          </Route>

          <Route path="/dashboard/ajuda">
            <DashboardLayout>
              <Ajuda />
            </DashboardLayout>
          </Route>

          <Route path="/dashboard/notificacoes">
            <DashboardLayout>
              <Notificacoes />
            </DashboardLayout>
          </Route>

          <Route component={NotFound} />
        </>
      )}
    </Switch>
  );
}

function App() {
  return (
    <QueryClientProvider client={queryClient}>
      <TooltipProvider>
        <WebSocketProvider>
          <Toaster />
          <Router />
        </WebSocketProvider>
      </TooltipProvider>
    </QueryClientProvider>
  );
}

export default App;